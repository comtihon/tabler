apply plugin: 'com.palantir.docker'
apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

sourceCompatibility = 1.8
group 'tabler'
version '1.0-SNAPSHOT'

buildscript {
    repositories {
        mavenCentral()
        maven { url 'https://plugins.gradle.org/m2/' }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:2.0.1.RELEASE")
        classpath('se.transmode.gradle:gradle-docker:1.2')
        classpath("gradle.plugin.com.palantir.gradle.docker:gradle-docker:0.13.0")
    }
}

repositories {
    mavenCentral()
}

bootJar {
    baseName = 'tabler'
    version =  '1.0-SNAPSHOT'
}

docker {
    dependsOn build
    name "${project.group}/${bootJar.baseName}"
    files bootJar.archivePath
    buildArgs(['JAR_FILE': "${bootJar.archiveName}"])
}

sourceSets {
    test_integration {
        java {
            compileClasspath = sourceSets.main.output + configurations.testRuntime
            runtimeClasspath = output + compileClasspath
            srcDir file('src/test_integration/java')
        }
        resources.srcDir file('src/test_integration/resources')
    }
}

task test_integration(type: Test) {
    testClassesDir = sourceSets.test_integration.output.classesDir
    classpath = sourceSets.test_integration.runtimeClasspath
}

check.dependsOn test_integration

dependencies {
    compile('org.springframework.boot:spring-boot-starter-web')
    compile('org.springframework.boot:spring-boot-starter-data-jpa')
    compile('org.springframework.boot:spring-boot-starter-jdbc')
    compile('com.zaxxer:HikariCP')
    compile('org.modelmapper:modelmapper:1.1.0')
    compile('org.projectlombok:lombok:1.16.20')
    runtime('org.postgresql:postgresql')

    testCompile('com.h2database:h2:1.4.196')
    testCompile('org.mockito:mockito-all:1.10.19')
    testCompile('org.springframework.boot:spring-boot-starter-test')
}
